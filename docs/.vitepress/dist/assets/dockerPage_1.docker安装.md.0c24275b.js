import{_ as e,o,c,V as r}from"./chunks/framework.bbb6cb24.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"dockerPage/1.docker安装.md","filePath":"dockerPage/1.docker安装.md","lastUpdated":1717654037000}'),t={name:"dockerPage/1.docker安装.md"},a=r(`<ol><li>安装gcc<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yum -y install gcc</span></span>
<span class="line"><span style="color:#A6ACCD;">yum -y install gcc-c++</span></span></code></pre></div>gcc -v查看是否安装成功</li><li>参照网址<a href="https://docs.docker.com/install/linux/docker-ce/centos/%E6%89%A7%E8%A1%8Cdocker%E5%AE%89%E8%A3%85" target="_blank" rel="noreferrer">https://docs.docker.com/install/linux/docker-ce/centos/执行docker安装</a></li><li>查看docker是否安装成功docker -v</li><li>在安装stable repository官网命令为<code>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</code> 由于国内连接国外，有时候会出现timeout错误，或者tcp断开，所以使用阿里云进行下载： <strong>yum-config-manager --add-repo <a href="http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo" target="_blank" rel="noreferrer">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</a></strong> 5.配置阿里云镜像加速</li></ol><ul><li>进入阿里云容器容器服务：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" target="_blank" rel="noreferrer">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></li><li>复制加速地址</li><li>在etc目录下新建docker目录：<code>mkdir -p /etc/docker</code></li><li>打开文件 <code>vim /etc/docker/daemon.json</code></li><li>写入阿里云配置的连接</li><li>之后esc，然后:wq! 强制保存退出</li><li><code>systemctl daemon-reload </code> // 重新加载daemon</li><li><code>systemctl restart docker</code> // 重启docker</li><li><code>ps -ef|grep docker</code> 查看是否配置成功</li><li><code>cat /etc/redhat-release</code> 查看centos版本</li></ul>`,2),l=[a];function s(n,d,i,p,m,k){return o(),c("div",null,l)}const g=e(t,[["render",s]]);export{u as __pageData,g as default};
