import{_ as l,H as p,o,c as t,J as e,E as c,C as s,a as n,V as r}from"./chunks/framework.bbb6cb24.js";const P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"JavaScriptPage/防抖和节流.md","filePath":"JavaScriptPage/防抖和节流.md","lastUpdated":1717654037000}'),y={name:"JavaScriptPage/防抖和节流.md"},F=s("h2",{id:"一、防抖和节流",tabindex:"-1"},[n("一、防抖和节流 "),s("a",{class:"header-anchor",href:"#一、防抖和节流","aria-label":'Permalink to "一、防抖和节流"'},"​")],-1),D=s("p",null,"防抖和节流其实都是在规避频繁触发回调导致大量计算，从而影响页面发生抖动甚至卡顿。简单的说将多次回调比如页面点击或 ajax 调用变为一次。防抖和节流的区别在于以第一次为准还是最后一次为准。",-1),i=s("h2",{id:"二、常见的使用场景",tabindex:"-1"},[n("二、常见的使用场景 "),s("a",{class:"header-anchor",href:"#二、常见的使用场景","aria-label":'Permalink to "二、常见的使用场景"'},"​")],-1),A=s("li",null,"监听 scroll、mouseMove 等事件 - 节流（每隔一秒计算一次位置）",-1),C=s("li",null,"监听浏览器窗口resize操作-防抖（只需要计算一次）",-1),f=s("li",null,"键盘文本输入的验证-防抖（连续输入文字后发送请求进行验证，验证一次就好）",-1),u=s("li",null,"提交表单-防抖（多次变为一次）",-1),d=s("li",null,"search搜索联想，用户在不断输入值时，用防抖来节约请求资源",-1),E=s("li",null,"登录、发短信等按钮避免用户点击太快，以致于发送了多次请求，需要防抖",-1),m=s("li",null,"节流、防抖有时用哪个都可以，比如监听页面滚动，可以节流（每个一段时间出发一次回调），也可以防抖（用户当前这次滚动结束出发，继续滚动等待下一次触发",-1),h=r("",16);function g(_,b,v,k,T,q){const a=p("ui");return o(),t("div",null,[F,D,i,e(a,null,{default:c(()=>[A,C,f,u,d,E,m]),_:1}),h])}const R=l(y,[["render",g]]);export{P as __pageData,R as default};
