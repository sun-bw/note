import{_ as s,c as a,o as i,aR as e}from"./chunks/framework.BCbTIoR1.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vuePage/vue路由两种模式.md","filePath":"vuePage/vue路由两种模式.md","lastUpdated":1717654037000}'),t={name:"vuePage/vue路由两种模式.md"},h=e(`<h2 id="一、hash和history" tabindex="-1">一、hash和history <a class="header-anchor" href="#一、hash和history" aria-label="Permalink to &quot;一、hash和history&quot;">​</a></h2><ol><li>hash默认的，url地址中会带有#。例如：<code>http://localhost:8082/#/PersonalNotes</code>。 hash的值为#/PersonalNotes。改变当前hash值，整个页面不会重新加载，不会重新请求接口。</li><li>history：开启路由history模式<code>mode:&#39;history&#39;</code>。当工程开启history模式，部署之后，刷新页面就会报404错误。 当时用history模式时，需要在nginx配置</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    try_files $uri $uri</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="二、区别" tabindex="-1">二、区别 <a class="header-anchor" href="#二、区别" aria-label="Permalink to &quot;二、区别&quot;">​</a></h2><ul><li>默认为hash模式，hash模式下，url地址中会带有#，history不带。使用history模式还有一个问题就是，在访问二级页面的时候，做刷新操作，会出现404错误，那么就需要和后端人配合让他配置一下apache或是nginx的url重定向，重定向到你的首页路由上就ok啦。</li><li>history模式下，build之后本地 index.html 打开是无效的。</li><li>hash模式下，build之后本地 index.html 打开正常！</li></ul>`,5),l=[h];function n(o,r,d,p,c,_){return i(),a("div",null,l)}const y=s(t,[["render",n]]);export{u as __pageData,y as default};
